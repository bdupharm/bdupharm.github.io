<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>A Pharmacist&#39;s Adventures in Software Engineering</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.bodu.io/"/>
  <updated>2016-07-12T14:34:03.963Z</updated>
  <id>http://blog.bodu.io/</id>
  
  <author>
    <name>Bo Du</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Unable to Verify iOS Developer Apps</title>
    <link href="http://blog.bodu.io/2016/07/12/Unable-to-Verify-iOS-Developer-Apps/"/>
    <id>http://blog.bodu.io/2016/07/12/Unable-to-Verify-iOS-Developer-Apps/</id>
    <published>2016-07-12T14:09:28.000Z</published>
    <updated>2016-07-12T14:34:03.963Z</updated>
    
    <content type="html">&lt;p&gt;As of this morning, &lt;a href=&quot;https://ppq.apple.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://ppq.apple.com&lt;/a&gt; is down and developers are unable to verify their development apps on their iOS devices.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;I was initially confused by this error since my iOS device had a network connection.&lt;br&gt;&lt;img src=&quot;/images/2016/07/unable_to_verify_developer_app.PNG&quot; alt=&quot;no verify&quot;&gt;&lt;/p&gt;
&lt;p&gt;After some quick googling, I found that the site &lt;a href=&quot;https://ppq.apple.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://ppq.apple.com&lt;/a&gt; needs to be up in order for developers to verify applications. The error message should be updated to reflect that…&lt;/p&gt;
&lt;p&gt;See stackoverflow thread &lt;a href=&quot;http://stackoverflow.com/questions/33153036/ios9-developer-trust-app-no-internet-connection-error&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; It looks like it is back up after a few hours.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;As of this morning, &lt;a href=&quot;https://ppq.apple.com&quot;&gt;https://ppq.apple.com&lt;/a&gt; is down and developers are unable to verify their development apps on their iOS devices.&lt;/p&gt;
    
    </summary>
    
    
      <category term="apple service outage" scheme="http://blog.bodu.io/tags/apple-service-outage/"/>
    
  </entry>
  
  <entry>
    <title>Write a Babel Plugin in 5 Minutes</title>
    <link href="http://blog.bodu.io/2016/07/06/Write-a-Babel-Plugin-iin-5-Minutes/"/>
    <id>http://blog.bodu.io/2016/07/06/Write-a-Babel-Plugin-iin-5-Minutes/</id>
    <published>2016-07-06T21:58:32.000Z</published>
    <updated>2016-07-12T14:07:31.499Z</updated>
    
    <content type="html">&lt;p&gt;So you want to write a babel plugin… Let’s start with some background before jumping into the fray.&lt;/p&gt;
&lt;h4 id=&quot;How-does-babel-work&quot;&gt;&lt;a href=&quot;#How-does-babel-work&quot; class=&quot;headerlink&quot; title=&quot;How does babel work?&quot;&gt;&lt;/a&gt;How does babel work?&lt;/h4&gt;&lt;p&gt;Babel is a transpiler that transpiles javascript code that you write (ES6, JSX) into javascript code that the browser understands. It does so in three steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Parser - babel uses babylon as a javascript parser which parses input code into an abstract syntax tree (AST)&lt;/li&gt;
&lt;li&gt;Transformer - babel plugins operate on the AST by transforming it into another AST&lt;/li&gt;
&lt;li&gt;Generator - babel’s generator generates browser friendly JS code from the final AST&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;How-do-babel-plugins-work&quot;&gt;&lt;a href=&quot;#How-do-babel-plugins-work&quot; class=&quot;headerlink&quot; title=&quot;How do babel plugins work?&quot;&gt;&lt;/a&gt;How do babel plugins work?&lt;/h4&gt;&lt;p&gt;Babel plugins utilize the &lt;a href=&quot;https://sourcemaking.com/design_patterns/visitor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;visitor design pattern&lt;/a&gt;. You define visitors for the AST node types that you want to manipulate.&lt;/p&gt;
&lt;h4 id=&quot;Cool-let’s-stare-at-some-code-now&quot;&gt;&lt;a href=&quot;#Cool-let’s-stare-at-some-code-now&quot; class=&quot;headerlink&quot; title=&quot;Cool, let’s stare at some code now.&quot;&gt;&lt;/a&gt;Cool, let’s stare at some code now.&lt;/h4&gt;&lt;p&gt;For example, let’s take a look at &lt;a href=&quot;https://github.com/bdupharm/babel-plugin-remove-object-properties&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;this plugin&lt;/a&gt; I wrote for work. We wanted to add extra tags to react elements for testing purposes in our &lt;code&gt;React.JS&lt;/code&gt; web app. (If you are not familiar with &lt;code&gt;JSX&lt;/code&gt; look &lt;a href=&quot;https://facebook.github.io/react/docs/jsx-in-depth.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight jsx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data-id=&lt;span class=&quot;string&quot;&gt;&quot;test&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;We want to create a visitor for AST nodes of type &lt;code&gt;ObjectProperty&lt;/code&gt; and remove any node with a name that matches &lt;code&gt;data-*&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The code for this would look like this:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&quot;use strict&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        visitor: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ObjectProperty: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ObjectProperty&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;path, state&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 * Define a visitor for nodes of type `ObjectProperty`.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 * Nodes w/ property names that match a specified regex will be removed.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 * :param path: the path of the visited node&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 * :param state: options that are passed to the plugin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; regexp = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;RegExp&lt;/span&gt;(state.opts.regexp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (regexp.test(path.node.key.name) || regexp.test(path.node.key.value)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    path.remove();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Here, we perform a simple remove node operation with &lt;code&gt;path.remove()&lt;/code&gt;. The &lt;code&gt;path&lt;/code&gt; object has other pragmatically named methods you may find useful:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Replacing a node : &lt;code&gt;path.replaceWith();&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Replacing a node w/ multiple nodes: &lt;code&gt;path.replaceWithMultiple();&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Replacing a node w/ source string: &lt;code&gt;path.replaceWithSourceString();&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Inserting a sibling node: &lt;code&gt;path.insertBefore();&lt;/code&gt; and &lt;code&gt;path.insertAfter();&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you would like to perform more complex operations like creating new nodes, take a look at the &lt;code&gt;babel-types&lt;/code&gt; documentation located &lt;a href=&quot;https://github.com/babel/babel/tree/master/packages/babel-types&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;here&lt;/a&gt;. &lt;code&gt;babel-types&lt;/code&gt; has methods to construct nodes of various types.&lt;/p&gt;
&lt;h4 id=&quot;How-do-I-publish-my-plugin-and-or-include-it-in-my-project&quot;&gt;&lt;a href=&quot;#How-do-I-publish-my-plugin-and-or-include-it-in-my-project&quot; class=&quot;headerlink&quot; title=&quot;How do I publish my plugin and/or include it in my project?&quot;&gt;&lt;/a&gt;How do I publish my plugin and/or include it in my project?&lt;/h4&gt;&lt;p&gt;Your module name must be in the format of &lt;code&gt;babel-plugin-*&lt;/code&gt; where the &lt;code&gt;*&lt;/code&gt; is the name of your plugin. I’m assuming that you know how to bootstrap a npm module project.&lt;br&gt;Once you’re finished, just publish your module with &lt;code&gt;npm publish&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now just run &lt;code&gt;npm i babel-plugin-* --save-dev&lt;/code&gt;, where &lt;code&gt;*&lt;/code&gt; is the name of the plugin you just published, inside your project folder.&lt;/p&gt;
&lt;p&gt;Lastly, just add the plugin to your &lt;code&gt;.babelrc&lt;/code&gt; file. The one thing I would note here is that &lt;code&gt;{ &amp;quot;regexp&amp;quot;: &amp;quot;data-*&amp;quot; }&lt;/code&gt; is the &lt;code&gt;state.opts&lt;/code&gt; object passed into &lt;code&gt;function ObjectProperty(path, state) {}&lt;/code&gt; above.&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;plugins&quot;&lt;/span&gt;: [[&lt;span class=&quot;string&quot;&gt;&quot;remove-object-properties&quot;&lt;/span&gt;, &amp;#123; &lt;span class=&quot;string&quot;&gt;&quot;regexp&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;data-*&quot;&lt;/span&gt; &amp;#125;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;So you want to write a babel plugin… Let’s start with some background before jumping into the fray.&lt;/p&gt;
&lt;h4 id=&quot;How-does-babel-work&quot;&gt;&lt;a href=&quot;#How-does-babel-work&quot; class=&quot;headerlink&quot; title=&quot;How does babel work?&quot;&gt;&lt;/a&gt;How does babel work?&lt;/h4&gt;&lt;p&gt;Babel is a transpiler that transpiles javascript code that you write (ES6, JSX) into javascript code that the browser understands. It does so in three steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Parser - babel uses babylon as a javascript parser which parses input code into an abstract syntax tree (AST)&lt;/li&gt;
&lt;li&gt;Transformer - babel plugins operate on the AST by transforming it into another AST&lt;/li&gt;
&lt;li&gt;Generator - babel’s generator generates browser friendly JS code from the final AST&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="babel, plugin, node, javascript" scheme="http://blog.bodu.io/tags/babel-plugin-node-javascript/"/>
    
  </entry>
  
  <entry>
    <title>Using Forked NPM Modules</title>
    <link href="http://blog.bodu.io/2016/06/27/Using-Forked-NPM-Modules/"/>
    <id>http://blog.bodu.io/2016/06/27/Using-Forked-NPM-Modules/</id>
    <published>2016-06-27T21:07:19.000Z</published>
    <updated>2016-06-27T22:08:30.411Z</updated>
    
    <content type="html">&lt;p&gt;You just forked an npm module you’ve been using for a while and you’re presented with two options. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Wait for the maintainer of that module to merge your pull request&lt;/li&gt;
&lt;li&gt;Use the forked version in the meantime &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Ehhh, only yeezus knows when this guy is going to merge our PR… so let’s just use our forked version for the time being.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;In most cases, using a forked module will be very easy. Just add the git url to &lt;code&gt;package.json&lt;/code&gt;. See the NPM documentation &lt;a href=&quot;https://docs.npmjs.com/files/package.json#git-urls-as-dependencies&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;here&lt;/a&gt;.&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;boron&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;git@github.com:truveris/boron.git&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;BUT WAIT&lt;/strong&gt;, what if the project’s author has a clever way of publishing his module to NPM? &lt;/p&gt;
&lt;p&gt;If you take a look at &lt;a href=&quot;https://github.com/yuanyan/boron&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;this&lt;/a&gt; React.JS module and peer into the &lt;code&gt;gulpfile.js&lt;/code&gt; and &lt;code&gt;.npmignore&lt;/code&gt; files, you can see that this guy is not merely running &lt;code&gt;npm publish&lt;/code&gt;. The author threw some custom build/publish code inside of a gulp task.&lt;/p&gt;
&lt;p&gt;To solve this, we ended up just running the build step, tarballing the result and saving the tarball within the project and editing&lt;code&gt;package.json&lt;/code&gt; like so.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;{
  &lt;span class=&quot;string&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;: {
    &lt;span class=&quot;string&quot;&gt;&quot;boron&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;./some-folder/boron-fork.tar.gz&quot;&lt;/span&gt;
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively, you could host the tarball somewhere like AWS S3 and add in the url in &lt;code&gt;package.json&lt;/code&gt;.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;You just forked an npm module you’ve been using for a while and you’re presented with two options. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Wait for the maintainer of that module to merge your pull request&lt;/li&gt;
&lt;li&gt;Use the forked version in the meantime &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Ehhh, only yeezus knows when this guy is going to merge our PR… so let’s just use our forked version for the time being.&lt;/p&gt;
    
    </summary>
    
    
      <category term="npm, forked modules, node, js" scheme="http://blog.bodu.io/tags/npm-forked-modules-node-js/"/>
    
  </entry>
  
  <entry>
    <title>Debugging Javascript in IE8</title>
    <link href="http://blog.bodu.io/2016/05/05/Debugging-Javascript-in-IE8/"/>
    <id>http://blog.bodu.io/2016/05/05/Debugging-Javascript-in-IE8/</id>
    <published>2016-05-05T18:53:41.000Z</published>
    <updated>2016-05-05T19:14:58.759Z</updated>
    
    <content type="html">&lt;p&gt;First time debugging javascript in IE8 today, here is what I wish I knew going in:&lt;/p&gt;
&lt;p&gt;When you select a DOM node/element in IE8 you get a useless representation of the object.&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Assume that JQuery is loaded&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// IE 8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; $(&lt;span class=&quot;string&quot;&gt;&quot;div&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;...&amp;#125; &lt;span class=&quot;comment&quot;&gt;// &amp;lt; WTH IS THIS??&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Any sane console debugger&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; $(&lt;span class=&quot;string&quot;&gt;&quot;div&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt; &amp;#123; length: &lt;span class=&quot;number&quot;&gt;59&lt;/span&gt;, prevObject: &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;, context: HTMLDocument → &lt;span class=&quot;number&quot;&gt;19409&lt;/span&gt;, selector: &lt;span class=&quot;string&quot;&gt;&quot;div&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;59&lt;/span&gt; more… &amp;#125; &lt;span class=&quot;comment&quot;&gt;// I can work with this&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;If you want to look at any of the methods or values on the object you have to type in the name of the variable into the &lt;code&gt;watch&lt;/code&gt; tab of the developer tools.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016/05/ie8_watch.png&quot; alt=&quot;IE8 Watch Tab&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;First time debugging javascript in IE8 today, here is what I wish I knew going in:&lt;/p&gt;
&lt;p&gt;When you select a DOM node/element in IE8 you get a useless representation of the object.&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Assume that JQuery is loaded&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// IE 8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; $(&lt;span class=&quot;string&quot;&gt;&quot;div&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;...&amp;#125; &lt;span class=&quot;comment&quot;&gt;// &amp;lt; WTH IS THIS??&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Any sane console debugger&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; $(&lt;span class=&quot;string&quot;&gt;&quot;div&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt; &amp;#123; length: &lt;span class=&quot;number&quot;&gt;59&lt;/span&gt;, prevObject: &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;, context: HTMLDocument → &lt;span class=&quot;number&quot;&gt;19409&lt;/span&gt;, selector: &lt;span class=&quot;string&quot;&gt;&quot;div&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;59&lt;/span&gt; more… &amp;#125; &lt;span class=&quot;comment&quot;&gt;// I can work with this&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Zope Transaction Manager Not Committing Your Changes? Try Marking the Session as Dirty</title>
    <link href="http://blog.bodu.io/2016/04/24/Zope-Transaction-Manager-Not-Committing-Your-Changes-Try-Marking-the-Session-as-Dirty/"/>
    <id>http://blog.bodu.io/2016/04/24/Zope-Transaction-Manager-Not-Committing-Your-Changes-Try-Marking-the-Session-as-Dirty/</id>
    <published>2016-04-24T23:08:52.000Z</published>
    <updated>2016-05-01T21:03:00.479Z</updated>
    
    <content type="html">&lt;p&gt;If you’re reading this post, then you are likely familiar with the &lt;code&gt;Pyramid&lt;/code&gt; python web framework, the zope transaction manager (zope tm) and &lt;code&gt;SQLAlchemy&lt;/code&gt;.&lt;br&gt;The zope tm is smart enough to know when your session is dirty most of the time. But what if you want to execute raw SQL directly? The zope tm will not know that the session is dirty and will not commit your changes.&lt;/p&gt;
&lt;p&gt;Solution? Manually mark the session as dirty when you execute raw SQL yourself.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Let’s say you have a database session object like this:&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;session = scoped_session(sessionmaker())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;And you have code written like this:&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Using the ORM&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Zope tm knows whatsup. Your changes are committed.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;user = model.User(first_name=&lt;span class=&quot;string&quot;&gt;&quot;Kanye&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  last_name=&lt;span class=&quot;string&quot;&gt;&quot;West&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;session.add(user)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Execute a raw SQL statement&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Zope tm has no idea wtf your doing. Your changes are not committed.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;session.execute(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    model.User.__table__.insert()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# first name, last name &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .values((&lt;span class=&quot;string&quot;&gt;&quot;kanye&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;west&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;In the second example, you need to mark the session as dirty in order for zope tm to commit the transaction.&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; zope.sqlalchemy &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; mark_changed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mark_changed(session())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Make sure you call &lt;code&gt;mark_changed&lt;/code&gt; on the actual &lt;code&gt;session&lt;/code&gt; object and not the &lt;code&gt;scoped_session&lt;/code&gt; object or you will get an error like this:&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# dropped a debugger in my application&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ipdb&amp;gt; session()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;sqlalchemy.orm.session.Session object at &lt;span class=&quot;number&quot;&gt;0x7f0bb46a4a50&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ipdb&amp;gt; session&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;sqlalchemy.orm.scoping.scoped_session object at &lt;span class=&quot;number&quot;&gt;0x7996590&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ipdb&amp;gt; mark_changed(session)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*** AttributeError: &lt;span class=&quot;string&quot;&gt;&#39;scoped_session&#39;&lt;/span&gt; object has no attribute &lt;span class=&quot;string&quot;&gt;&#39;twophase&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;If you’re reading this post, then you are likely familiar with the &lt;code&gt;Pyramid&lt;/code&gt; python web framework, the zope transaction manager (zope tm) and &lt;code&gt;SQLAlchemy&lt;/code&gt;.&lt;br&gt;The zope tm is smart enough to know when your session is dirty most of the time. But what if you want to execute raw SQL directly? The zope tm will not know that the session is dirty and will not commit your changes.&lt;/p&gt;
&lt;p&gt;Solution? Manually mark the session as dirty when you execute raw SQL yourself.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Casting in PostgreSQL: A Shallow Wade Through Comparisons</title>
    <link href="http://blog.bodu.io/2016/04/21/Casting-in-PostgreSQL-A-Shallow-Wade-Through-Comparisons/"/>
    <id>http://blog.bodu.io/2016/04/21/Casting-in-PostgreSQL-A-Shallow-Wade-Through-Comparisons/</id>
    <published>2016-04-21T15:35:05.000Z</published>
    <updated>2016-05-01T21:02:18.575Z</updated>
    
    <content type="html">&lt;p&gt;Ever wondered how postgres is performing a comparison in a query like this:&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;db=# select relname, oid from pg_class where oid = &#39;pg_cast&#39;::regclass;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; relname | oid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---------+------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; pg_cast | 2605&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(1 row)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;oid&lt;/code&gt; is not the same type as &lt;code&gt;regclass&lt;/code&gt;… so how is postgres handling this comparison (and others)? &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;First, we want to query the &lt;code&gt;pg_type&lt;/code&gt; table to find the oids of both the &lt;code&gt;oid&lt;/code&gt; and &lt;code&gt;regclass&lt;/code&gt; types. We need their oids to locate the relevant records on the &lt;code&gt;pg_cast&lt;/code&gt; table.&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;db=# select typname, oid from pg_type where typname ~ &#39;^oid$|^regclass$&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; typname  | oid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;----------+------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; oid      |   26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; regclass | 2205&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2 rows)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Next, we want to query the &lt;code&gt;pg_cast&lt;/code&gt; table.&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;db=# select * from pg_cast where castsource in (26, 2205) and casttarget in (2205, 26);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; castsource | casttarget | castfunc | castcontext | castmethod&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;------------+------------+----------+-------------+------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         26 |       2205 |        0 | i           | b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       2205 |         26 |        0 | i           | b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2 rows)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Now we see that there is implicit casting (&lt;code&gt;castcontext&lt;/code&gt; value of i) between the types going both ways.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;castfunc&lt;/code&gt; value of 0 means that this cast method does not require a function. Otherwise, we would query the &lt;code&gt;pg_proc&lt;/code&gt; table with the &lt;code&gt;oid&lt;/code&gt;, value of &lt;code&gt;castfunc&lt;/code&gt;, to figure out which function postgres is using.&lt;/p&gt;
&lt;p&gt;Lastly, the &lt;code&gt;castmethod&lt;/code&gt; is b, which means that the types are “binary-coercible”. I am not sure if this is the correct interpretation, but it may mean that the raw bytes of the two types stay the same between castings. &lt;/p&gt;
&lt;p&gt;If you’re ever curious about comparisons in postgres again, you can always poke around in the &lt;code&gt;pg_type&lt;/code&gt;, &lt;code&gt;pg_cast&lt;/code&gt; and &lt;code&gt;pg_proc&lt;/code&gt; tables to figure out what is happening behind the scenes.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Ever wondered how postgres is performing a comparison in a query like this:&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;db=# select relname, oid from pg_class where oid = &#39;pg_cast&#39;::regclass;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; relname | oid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---------+------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; pg_cast | 2605&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(1 row)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;oid&lt;/code&gt; is not the same type as &lt;code&gt;regclass&lt;/code&gt;… so how is postgres handling this comparison (and others)? &lt;/p&gt;
    
    </summary>
    
    
      <category term="cast, casting, postgres, postgresql, sql" scheme="http://blog.bodu.io/tags/cast-casting-postgres-postgresql-sql/"/>
    
  </entry>
  
  <entry>
    <title>SCP and SSH Without Entering a Password</title>
    <link href="http://blog.bodu.io/2016/04/15/SCP-and-SSH-Without-Entering-a-Password/"/>
    <id>http://blog.bodu.io/2016/04/15/SCP-and-SSH-Without-Entering-a-Password/</id>
    <published>2016-04-15T20:15:50.000Z</published>
    <updated>2016-04-16T02:11:16.455Z</updated>
    
    <content type="html">&lt;p&gt;Both &lt;code&gt;scp&lt;/code&gt; and &lt;code&gt;ssh&lt;/code&gt; prompt you for a password when trying to connect to a remote host. Here is how to do both without having to enter a password. &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Assume that &lt;strong&gt;localhost&lt;/strong&gt; means the machine running the scp/ssh command and &lt;strong&gt;remotehost&lt;/strong&gt; means the remote machine you are connecting/transferring files to.&lt;/p&gt;
&lt;p&gt;If you don’t already have a pair of private/public keys, generate a new set with &lt;code&gt;ssh-keygen&lt;/code&gt;. Don’t forget to set valid permissions if you are creating a new key pair.&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ssh-keygen -t rsa&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;This will create a private key &lt;code&gt;~/.ssh/id_rsa&lt;/code&gt; and public key &lt;code&gt;~/.ssh/id_rsa.pub&lt;/code&gt; pair on your &lt;strong&gt;localhost&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I like to configure things in my ssh config on my &lt;strong&gt;localhost&lt;/strong&gt;. I suggest you do so as well as it makes managing multiple key pairs and remote hosts easy. Edit your &lt;code&gt;~/.ssh/config&lt;/code&gt; file like so:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Host sandbox&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User kobebryant&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HostName 192.168.56.101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IdentityFile ~/.ssh/id_rsa&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Copy over the public key &lt;code&gt;id_rsa.pub&lt;/code&gt; to your &lt;strong&gt;remotehost&lt;/strong&gt; and add it to your &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; file. Make sure to set valid permissions.&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cat id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ chmod 700 ~/.ssh/authorized_keys&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;That’s it, you can now scp/ssh without entering a password.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Both &lt;code&gt;scp&lt;/code&gt; and &lt;code&gt;ssh&lt;/code&gt; prompt you for a password when trying to connect to a remote host. Here is how to do both without having to enter a password. &lt;/p&gt;
    
    </summary>
    
    
      <category term="scp, ssh, passwordless" scheme="http://blog.bodu.io/tags/scp-ssh-passwordless/"/>
    
  </entry>
  
  <entry>
    <title>Don&#39;t Use Masked URL Redirect Records, Use CNAME Instead</title>
    <link href="http://blog.bodu.io/2016/04/14/Don-t-Use-Masked-URL-Redirect-Records-Use-CNAME-Instead/"/>
    <id>http://blog.bodu.io/2016/04/14/Don-t-Use-Masked-URL-Redirect-Records-Use-CNAME-Instead/</id>
    <published>2016-04-14T14:09:59.000Z</published>
    <updated>2016-04-14T15:02:27.747Z</updated>
    
    <content type="html">&lt;p&gt;A “masked” url redirect record in your DNS config most likely means your hosting provider is placing your website inside of an iframe. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016/04/masked_url_redirect.png&quot; alt=&quot;Masked URL Redirect Record&quot;&gt;&lt;/p&gt;
&lt;p&gt;No magic here… your page now looks like this:&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Frameset//EN&quot; &quot;http://www.w3.org/TR/html4/frameset.dtd&quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;content-type&#39;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;text/html; charset=UTF-8&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;VERSION&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;DATA&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;example.registrar-servers.com (xxx.xx.xxx.xxx)&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;shortcut icon&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;image/x-icon&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;frameset&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rows&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;100%, *&#39;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;frameborder&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;framespacing&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;border&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;0&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;frame&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://bdupharm.github.io&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;mainwindow&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;frameborder&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;framespacing&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;marginheight&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;marginwidth&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;0&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;frame&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;frameset&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;noframes&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;Your browser does not support frames. We recommend upgrading your browser.&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;Click &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://bdupharm.github.io&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;here&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt; to enter the site.&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;noframes&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Notice that all the important &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tags like the &lt;code&gt;viewport&lt;/code&gt; tag for mobile responsiveness are missing (actually just loaded into the iframe).&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;width=device-width, initial-scale=1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Save yourself and just use a CNAME record instead. A CNAME record is a name to name resolution and maps directly to the desired domain.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016/04/cname_record.png&quot; alt=&quot;Masked URL Redirect Record&quot;&gt;&lt;/p&gt;
&lt;p&gt;Let’s take a look at the DNS name resolution now with the dig command. Only a partial response is represented here.&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ dig blog.bodu.io&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; ANSWER SECTION:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;blog.bodu.io.           29      IN      CNAME   bdupharm.github.io.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bdupharm.github.io.     1830    IN      CNAME   github.map.fastly.net.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;github.map.fastly.net.  17      IN      A       23.235.39.133&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Now you see the name to name resolution in action. There are other steps via github that are needed for setting up a custom damain that you can view &lt;a href=&quot;https://help.github.com/articles/setting-up-your-pages-site-repository/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;A “masked” url redirect record in your DNS config most likely means your hosting provider is placing your website inside of an iframe. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016/04/masked_url_redirect.png&quot; alt=&quot;Masked URL Redirect Record&quot;&gt;&lt;/p&gt;
&lt;p&gt;No magic here… your page now looks like this:&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Frameset//EN&quot; &quot;http://www.w3.org/TR/html4/frameset.dtd&quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;content-type&#39;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;text/html; charset=UTF-8&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;VERSION&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;DATA&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;example.registrar-servers.com (xxx.xx.xxx.xxx)&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;shortcut icon&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;image/x-icon&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;frameset&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rows&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;100%, *&#39;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;frameborder&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;framespacing&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;border&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;0&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;frame&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://bdupharm.github.io&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;mainwindow&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;frameborder&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;framespacing&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;marginheight&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;marginwidth&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;0&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;frame&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;frameset&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;noframes&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;Your browser does not support frames. We recommend upgrading your browser.&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;Click &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://bdupharm.github.io&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;here&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt; to enter the site.&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;center&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;noframes&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Shellscript -e Flag &amp; Changing Run-time Parameters with Set</title>
    <link href="http://blog.bodu.io/2016/04/12/Shellscript-e-flag/"/>
    <id>http://blog.bodu.io/2016/04/12/Shellscript-e-flag/</id>
    <published>2016-04-12T14:42:19.000Z</published>
    <updated>2016-04-12T17:01:49.127Z</updated>
    
    <content type="html">&lt;p&gt;Let’s say you want to your shellscript to exit when a command fails (returns with a non-zero exit code). Just call the shell interpreter with -e flag.&lt;/p&gt;
&lt;p&gt;For example, we have a script named gunit.sh.&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#!/bin/sh -e&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;touch /root/nottoday&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; Will not be executed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ./gunit.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;touch: cannot touch ‘/root/nottoday’: Permission denied&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; $?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The &lt;code&gt;touch&lt;/code&gt; command fails and the script exits immediately without executing the &lt;code&gt;echo&lt;/code&gt; command.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;What if we wanted to test the return code of a single command in the script while having it exit immediately for other failing commands?&lt;/p&gt;
&lt;p&gt;You can set/unset the -e flag within the script to achieve desired behavior.&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#!/bin/sh -e&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; +e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;touch /root/nottoday&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rc=$?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ &lt;span class=&quot;variable&quot;&gt;$rc&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-ne&lt;/span&gt; 0 ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; Will be executed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;touch /root/nottoday&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; Will not be executed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ./gunit.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;touch: cannot touch ‘/root/nottoday’: Permission denied&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Will be executed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;touch: cannot touch ‘/root/nottoday’: Permission denied&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Here, we unset the -e flag and run the first &lt;code&gt;touch&lt;/code&gt; command and test the return code.&lt;br&gt;You can see that the second &lt;code&gt;touch&lt;/code&gt; command fails and the script exits immediately after the -e flag set again.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Let’s say you want to your shellscript to exit when a command fails (returns with a non-zero exit code). Just call the shell interpreter with -e flag.&lt;/p&gt;
&lt;p&gt;For example, we have a script named gunit.sh.&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#!/bin/sh -e&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;touch /root/nottoday&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; Will not be executed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ./gunit.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;touch: cannot touch ‘/root/nottoday’: Permission denied&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; $?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The &lt;code&gt;touch&lt;/code&gt; command fails and the script exits immediately without executing the &lt;code&gt;echo&lt;/code&gt; command.&lt;/p&gt;
    
    </summary>
    
    
      <category term="bash, shellscript, runtime flags, exit codes" scheme="http://blog.bodu.io/tags/bash-shellscript-runtime-flags-exit-codes/"/>
    
  </entry>
  
</feed>
